version: "2"

services:
  lb:
    container_name: lb
    image: neons/load-balancer:0.0.1
    ports:
      - 80:80
      - 443:443
    depends_on:
      - collector-1
      - collector-2
    volumes:
      - ./lb/haproxy:/usr/local/etc/haproxy
      - ./lb/rsyslog:/etc/rsyslog.d
      - ./lb/ssl:/etc/ssl/default
    networks:
      neons:
        ipv4_address: 10.0.0.10

  collector-1:
    container_name: collector-1
    image: neons/collector:1.0.2
    environment:
      - COLLECTOR_SINK_KAFKA_HOST=10.0.0.32
      - COLLECTOR_SINK_KAFKA_PORT=9092
      - COLLECTOR_APPLICATION_PORT=80
      - COLLECTOR_AKKA_STDOUT_LOGLEVEL=INFO
      - COLLECTOR_AKKA_LOGLEVEL=INFO
    depends_on:
      - zookeeper
      - kafka
    volumes:
      - ../logs/collector-1:/logs
    tty: true
    networks:
      neons:
        ipv4_address: 10.0.0.21

  collector-2:
    container_name: collector-2
    image: neons/collector:1.0.2
    environment:
      - COLLECTOR_SINK_KAFKA_HOST=10.0.0.32
      - COLLECTOR_SINK_KAFKA_PORT=9092
      - COLLECTOR_APPLICATION_PORT=80
      - COLLECTOR_AKKA_STDOUT_LOGLEVEL=INFO
      - COLLECTOR_AKKA_LOGLEVEL=INFO
    depends_on:
      - zookeeper
      - kafka
    volumes:
      - ../logs/collector-2:/logs
    tty: true
    networks:
      neons:
        ipv4_address: 10.0.0.22

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
    networks:
      neons:
        ipv4_address: 10.0.0.31

  kafka:
    container_name: kafka
    image: wurstmeister/kafka
    ports:
      - 9092:9092
      - 9999:9999
    environment:
      - KAFKA_ADVERTISED_HOST_NAME=10.0.0.32
      - KAFKA_CREATE_TOPICS=neons_events:2:1
      - KAFKA_ZOOKEEPER_CONNECT=10.0.0.31:2181
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_DELETE_TOPIC_ENABLE=true
      - KAFKA_LOG_RETENTION_HOURS=2
      - KAFKA_MESSAGE_MAX_BYTES=50000000
      - KAFKA_REPLICA_FETCH_MAX_BYTES=100000000
      - KAFKA_FETCH_MESSAGE_MAX_BYTES=100000000
      - KAFKA_NUM_PARTITIONS=2
      - JMX_PORT=9999
    depends_on:
      - zookeeper
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      neons:
        ipv4_address: 10.0.0.32

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:5.3.0
    environment:
      - cluster.name=neons
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      neons:
        ipv4_address: 10.0.0.33

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:5.3.0
    environment:
      - ELASTICSEARCH_URL=http://10.0.0.33:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    networks:
      neons:
        ipv4_address: 10.0.0.34

  jobmanager:
    container_name: jobmanager
    image: neons/streamer:0.0.5
    ports:
      - 8081:8081
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=10.0.0.40
      - ELASTICSEARCH_HOST1=10.0.0.33
      - ELASTICSEARCH_PORT1=9300
      - KAFKA_SERVER=10.0.0.32:9092
    networks:
      neons:
        ipv4_address: 10.0.0.40

  taskmanager-1:
    container_name: taskmanager-1
    image: neons/streamer:0.0.5
    environment:
      - JOB_MANAGER_RPC_ADDRESS=10.0.0.40
      - ELASTICSEARCH_HOST1=10.0.0.33
      - ELASTICSEARCH_PORT1=9300
      - KAFKA_SERVER=10.0.0.32:9092
    depends_on:
      - jobmanager
      - elasticsearch
    command: taskmanager
    networks:
      neons:
        ipv4_address: 10.0.0.41

  taskmanager-2:
    container_name: taskmanager-2
    image: neons/streamer:0.0.5
    environment:
      - JOB_MANAGER_RPC_ADDRESS=10.0.0.40
      - ELASTICSEARCH_HOST1=10.0.0.33
      - ELASTICSEARCH_PORT1=9300
      - KAFKA_SERVER=10.0.0.32:9092
    depends_on:
      - jobmanager
      - elasticsearch
    command: taskmanager
    networks:
      neons:
        ipv4_address: 10.0.0.42

  portainer:
    container_name: portainer
    image: portainer/portainer
    ports:
      - 8082:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      neons:
        ipv4_address: 10.0.0.50

networks:
  neons:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.0.0.0/24
